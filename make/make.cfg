# Configuration includer. See the config directory for specific configuration files.
#
# Please set the environment variables
#
# MAKE_ROOT     (the absolute path where this file is located)
#
# MAKE_UNAME    (the type of your machine, typically the output of uname)
# MAKE_CFG      (the compiler configuration you would like to use)
# MAKE_HOSTNAME (the hostname of your computer, for host-specific config files)
#
# All of these variables are arbitrary, but at least MAKE_UNAME should be set,
# otherwise a generic configuration environment (using GNU C/C++) is used.
#
# To set these variables using the ksh, use:
#
#  export MAKE_UNAME=$(uname)
#  export MAKE_HOSTNAME=$(hostname)
#  export MAKE_CFG=Debug
#

# we definitely want to use /bin/sh as shell (globbering!)
ifneq ( $(OS_TYPE),cygwin32)
SHELL=/bin/sh
endif

# arch may be set in one of the following configuration files to somewhat other
arch=arch-$(MAKE_UNAME)-$(MAKE_CFG)

# Platform specific configurations - these have to exist!
 include $(MAKE_ROOT)/make/arch-default.cfg
-include $(MAKE_ROOT)/make/arch-$(MAKE_UNAME).cfg
 include $(MAKE_ROOT)/make/arch-$(MAKE_UNAME)-$(MAKE_CFG).cfg

# Host specific configurations
-include $(MAKE_ROOT)/make/hosts/arch-$(MAKE_UNAME)-$(MAKE_CFG)-$(MAKE_HOSTNAME).cfg

# User specific configurations
-include $(HOME)/make/arch.cfg
-include $(HOME)/make/arch-$(MAKE_UNAME).cfg
-include $(HOME)/make/arch-$(MAKE_UNAME)-$(MAKE_CFG).cfg
-include $(HOME)/make/arch-$(MAKE_UNAME)-$(MAKE_CFG)-$(MAKE_HOSTNAME).cfg

# Where to put compiled object files
ifndef OBJ_PATH
OBJ_PATH=$(MAKE_ROOT)/obj/$(arch)${MAKE_OSFLAVOR}/$(TARGET)
endif

# Where to put library files
LIB_ARCH_PATH=$(MAKE_ROOT)/lib/$(arch)${MAKE_OSFLAVOR}
LIB_PATH=$(LIB_ARCH_PATH)

# relative path for static libraries
#
# WARNING: The STATICSUBDIR must not end with a /,
# because the LIB_PATH_STATIC is added to the include paths
# of the C/C++ compiler and there are silly compilers out there
# which cannot handle include paths ending with a /. Only the
# path itself may be contained in an include path.
#
STATICSUBDIR=/static
LIB_PATH_STATIC=$(LIB_PATH)$(STATICSUBDIR)

# Where to put binary files
BINDIR=$(MAKE_ROOT)/bin/
BIN_PATH=$(BINDIR)$(arch)${MAKE_OSFLAVOR}
EXEC_BINARY=$${arch}/$(TARGET)

#
# Add target/package specific global configuration data
#
ifndef MAKE_ARCH_INCLUDES
MAKE_ARCH_INCLUDES=${LIB_PATH}
endif

-include $(MAKE_ARCH_INCLUDES)/*.setup
SETUP = $(MAKE_ARCH_INCLUDES)/$(TARGET).setup

-include $(MAKE_ARCH_INCLUDES)/*.cfg
TARGETCFG = $(MAKE_ARCH_INCLUDES)/$(TARGET).cfg

#
# Invocation support for external scripts
#
ENV=
export ENV MAKE_UNAME MAKE_CFG MAKE_ROOT arch


#
# MSDOS/MSWindows Variable substitutions
#
include $(MAKE_ROOT)/make/ms.cfg

EXPORTS=${TARGET}

